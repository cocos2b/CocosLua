
class CCScheduler : public CCObject
{
    void unscheduleAll(void);

    void unscheduleAllWithMinPriority(int nMinPriority);

};

class CCNode : public CCObject
{
    virtual void setZOrder(int zOrder);
};

class CCMenuItem : public CCNode
{
    static CCMenuItem* create();

};

class CCLabelTTF : public CCSprite
{

    void setStroke(const ccColor3B& color,float size);
    
    void setShadow(const ccColor3B& color,float x,float y);
    
}


class CCDrawNode : public CCNode
{
    static CCDrawNode* create();
    
    
    /** draw a dot at a position, with a given radius and color */
    void drawDot(const CCPoint &pos, float radius, const ccColor4F &color);
    
    /** draw a segment with a radius and color */
    void drawSegment(const CCPoint &from, const CCPoint &to, float radius, const ccColor4F &color);
    
    /** draw a polygon with a fill color and line color */
    void drawPolygon(CCPoint *verts, unsigned int count, const ccColor4F &fillColor, float borderWidth, const ccColor4F &borderColor);
    
    /** Clear the geometry in the node's buffer. */
    void clear();
    
    ccBlendFunc getBlendFunc() const;
    void setBlendFunc(const ccBlendFunc &blendFunc);
    
};

class CCInteger : public CCObject
{
    int getValue();

    static CCInteger* create(int v);
};

class CCFloat : public CCObject
{
    float getValue();

    static CCFloat* create(float v);
};

